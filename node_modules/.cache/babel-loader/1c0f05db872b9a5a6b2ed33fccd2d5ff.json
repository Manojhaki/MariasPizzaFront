{"ast":null,"code":"var _jsxFileName = \"/Users/manojpun/Desktop/mariaspizza/src/pages/Home.js\";\nimport React, { Component } from 'react';\nimport Navtab from '../components/Navbar';\nimport Footer from '../components/Footer';\nimport { EXAMPLES } from '../testData/example';\nimport { Route, Switch, Redirect } from 'react-router';\nimport Order from './Order';\nimport ShoppingCart from '../components/ShoppingCart';\nimport { Button } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateShoppingCart = items => {\n      this.setState({\n        shoppingCart: [...this.state.shoppingCart, items]\n      });\n    };\n\n    this.resetForm = () => {\n      this.setState(this.baseState);\n    };\n\n    this.state = {\n      examples: EXAMPLES,\n      shoppingCart: []\n    };\n    this.baseState = this.state; //alternative to use binding to update the current state with the new state\n    // or just use an arrow function because there is no this reference in the arrow function\n    // this.updateShoppingCart = this.updateShoppingCart.bind(this);\n  } // we want to update our shopping cart state,\n  // to have everything that has already been put inside of it\n  // plus whatever else we add in, when we click on \"order now\"\n\n\n  getShoppingCartItems() {\n    var sum = 0;\n    console.log(\"Testing State\", this.state.shoppingCart);\n    this.state.shoppingCart.forEach(cartItem => {\n      sum = sum + cartItem.quantity;\n    });\n    return sum;\n  }\n\n  // TODO: Write the function that can add an item into our shopping cart\n  render() {\n    const homepage = () => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Home Page Soon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this);\n    };\n\n    const order = () => {\n      return /*#__PURE__*/_jsxDEV(Order, {\n        examples: this.state.examples,\n        updateShoppingCart: this.updateShoppingCart,\n        reset: this.resetForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this);\n    };\n\n    const shoppingCart = () => {\n      return /*#__PURE__*/_jsxDEV(ShoppingCart, {\n        states: this.state.shoppingCart,\n        updateShoppingCart: this.updateShoppingCart,\n        reset: this.resetForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this);\n    }; // return \n\n\n    var cartItems = this.getShoppingCartItems();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navtab, {\n        cartItems: cartItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/home\",\n          component: homepage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/GiftCards\",\n          component: order\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/menu\",\n          component: shoppingCart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/manojpun/Desktop/mariaspizza/src/pages/Home.js"],"names":["React","Component","Navtab","Footer","EXAMPLES","Route","Switch","Redirect","Order","ShoppingCart","Button","Home","constructor","props","updateShoppingCart","items","setState","shoppingCart","state","resetForm","baseState","examples","getShoppingCartItems","sum","console","log","forEach","cartItem","quantity","render","homepage","order","cartItems"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Navtab from '../components/Navbar';\nimport Footer from '../components/Footer';\nimport { EXAMPLES } from '../testData/example';\nimport { Route, Switch, Redirect } from 'react-router';\nimport Order from './Order';\nimport ShoppingCart from '../components/ShoppingCart'\nimport { Button } from 'reactstrap';\nclass Home extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            examples: EXAMPLES,\n            shoppingCart: []\n        }\n        this.baseState = this.state;\n\n        //alternative to use binding to update the current state with the new state\n        // or just use an arrow function because there is no this reference in the arrow function\n        // this.updateShoppingCart = this.updateShoppingCart.bind(this);\n    }\n\n    // we want to update our shopping cart state,\n    // to have everything that has already been put inside of it\n    // plus whatever else we add in, when we click on \"order now\"\n    updateShoppingCart = (items) => {\n        this.setState({\n            shoppingCart: [...this.state.shoppingCart, items]\n        })\n    }\n    getShoppingCartItems() {\n        var sum = 0;\n        console.log(\"Testing State\", this.state.shoppingCart);\n        this.state.shoppingCart.forEach(cartItem => {\n            sum = sum + cartItem.quantity;\n        });\n\n        return sum;\n    }\n    resetForm = () => {\n        this.setState(this.baseState);\n    }\n    // TODO: Write the function that can add an item into our shopping cart\n    render() {\n        const homepage = () => {\n            return (\n                <p>Home Page Soon</p>\n            );\n        }\n        const order = () => {\n            return (\n                <Order examples={this.state.examples} updateShoppingCart={this.updateShoppingCart} reset={this.resetForm} />\n            );\n        }\n\n        const shoppingCart = () => {\n            return (\n                <ShoppingCart states={this.state.shoppingCart} updateShoppingCart={this.updateShoppingCart} reset={this.resetForm} />\n            );\n        }\n\n        // return \n\n        var cartItems = this.getShoppingCartItems();\n\n        return (\n            <div>\n                <Navtab cartItems={cartItems} />\n                <Switch>\n                    <Route path='/home' component={homepage} />\n                    <Route exact path='/GiftCards' component={order} />\n                    <Route exact path='/menu' component={shoppingCart} />\n                    <Redirect to='/home' />\n                </Switch>\n                {/* <Button onClick={this.resetForm}>Press</Button> */}\n                <Footer />\n            </div>\n        );\n    }\n}\nexport default Home;"]},"metadata":{},"sourceType":"module"}