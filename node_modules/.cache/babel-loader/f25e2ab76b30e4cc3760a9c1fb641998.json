{"ast":null,"code":"var _jsxFileName = \"/Users/manojpun/Desktop/mariaspizza/src/components/FoodItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Card, CardImg, CardImgOverlay, CardTitle, Button, CardText } from 'reactstrap';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './foodItem.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ntoast.configure();\nexport default function FoodItem(props) {\n  _s();\n\n  // const [STATE ITEM, SET STATE FUNCTION] = USE STATE(INITIAL STATE VALUE)\n  // TODO: rename to quantity\n  const [foodItem, setFoodItem] = useState(1); // TODO: when we click the order now button...\n  // call a function that takes the food item data, and the quantity selected\n  // and adds it to the state in the `home.js` file\n\n  const items = {\n    quantity: foodItem,\n    price: props.example.price,\n    imageName: props.example.name,\n    imageLocation: props.example.image\n  }; // function notify() {\n  //alert(\"Wow\");\n  //   const notify =\n  //      console.log(\"Notify\");\n  //}\n\n  function checkItems() {\n    if (foodItem < 1) {\n      console.log(\"not possible\");\n      setFoodItem(1);\n    }\n  } //  const notify = () => toast(\"Wow so easy !\");\n\n\n  function updateNotify() {\n    props.updateShoppingCart(items);\n  }\n\n  function waveHello() {\n    toast(\"hello\");\n    console.log(\"king\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      className: \"images\",\n      children: [/*#__PURE__*/_jsxDEV(CardImg, {\n        src: props.example.image,\n        alt: props.example.name,\n        width: \"100px\",\n        height: \"100px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardText, {\n        children: props.example.price\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"decrement counter-btn\",\n        onClick: () => setFoodItem(foodItem - 1),\n        children: [\"-\", checkItems()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Quantity\",\n        readonly: \"\",\n        class: \"quantity center-block\",\n        value: foodItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"increment counter-btn\",\n        onClick: () => setFoodItem(foodItem + 1),\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          waveHello();\n          updateNotify();\n          toast.success(\"kikg\");\n        },\n        children: \"order now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FoodItem, \"b7KJIJ6Gcft2i/MMf+NXdhw0KvE=\");\n\n_c = FoodItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"FoodItem\");","map":{"version":3,"sources":["/Users/manojpun/Desktop/mariaspizza/src/components/FoodItem.js"],"names":["React","useState","Card","CardImg","CardImgOverlay","CardTitle","Button","CardText","ToastContainer","toast","configure","FoodItem","props","foodItem","setFoodItem","items","quantity","price","example","imageName","name","imageLocation","image","checkItems","console","log","updateNotify","updateShoppingCart","waveHello","success"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Card, CardImg, CardImgOverlay, CardTitle, Button, CardText } from 'reactstrap';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './foodItem.css';\ntoast.configure();\n\nexport default function FoodItem(props) {\n    // const [STATE ITEM, SET STATE FUNCTION] = USE STATE(INITIAL STATE VALUE)\n    // TODO: rename to quantity\n\n\n\n    const [foodItem, setFoodItem] = useState(1);\n\n    // TODO: when we click the order now button...\n    // call a function that takes the food item data, and the quantity selected\n    // and adds it to the state in the `home.js` file\n\n    const items = {\n        quantity: foodItem,\n        price: props.example.price,\n        imageName: props.example.name,\n        imageLocation: props.example.image\n\n    }\n\n    // function notify() {\n    //alert(\"Wow\");\n    //   const notify =\n    //      console.log(\"Notify\");\n    //}\n\n    function checkItems() {\n\n        if (foodItem < 1) {\n            console.log(\"not possible\");\n            setFoodItem(1);\n        }\n    }\n    //  const notify = () => toast(\"Wow so easy !\");\n\n\n    function updateNotify() {\n        props.updateShoppingCart(items);\n\n    }\n    function waveHello() {\n\n        toast(\"hello\");\n\n        console.log(\"king\");\n    }\n\n    return (\n\n        <div>\n            <Card className=\"images\">\n                <CardImg src={props.example.image} alt={props.example.name} width=\"100px\" height=\"100px\"></CardImg>\n                <CardText>{props.example.price}</CardText>\n\n            </Card>\n            <div className=\"product\">\n                <button class=\"decrement counter-btn\" onClick={() => setFoodItem(foodItem - 1)} >-{checkItems()}</button>\n                <input type=\"number\" placeholder=\"Quantity\" readonly=\"\" class=\"quantity center-block\" value={foodItem} />\n                <button class=\"increment counter-btn\" onClick={() => setFoodItem(foodItem + 1)} >+</button>\n                <button\n                    onClick={() => {\n                        waveHello();\n                        updateNotify();\n                        toast.success(\"kikg\");\n                    }}\n                >order now</button>\n                <ToastContainer />\n\n            </div>\n        </div>\n\n\n    );\n}\n"]},"metadata":{},"sourceType":"module"}