{"ast":null,"code":"var _jsxFileName = \"/Users/manojpun/Desktop/mariaspizza/src/components/ShoppingCart.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'reactstrap';\nimport { EXAMPLES } from '../testData/example';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ShoppingCart extends Component {\n  constructor(props) {\n    super(props);\n  } // --> loop through the items in states\n  // --> write a console.log test for each of the items in the array\n  // --> log the quantity value to make sure we're able to access it\n  // --> create a global variable to collect the quantity of each array\n\n\n  render() {\n    console.log(\"tesssss:\", this.props);\n    var sum = 0;\n    var totalItem = 1;\n    this.props.states.forEach(element => {\n      totalItem = element.quantity * element.price;\n      sum = sum + totalItem;\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Shopping Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", this.props.states.map(element => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: element.imageLocation,\n              height: \"90\",\n              width: \"100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 28\n            }, this), element.imageName, \"  X \", element.quantity, \"  X \", element.price, \" : \", element.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Sub Total: \", sum.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Shipping Fee: $ 3.99\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Tax: 6% \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total: \", (0.06 * sum + sum).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => this.props.reset(),\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/manojpun/Desktop/mariaspizza/src/components/ShoppingCart.js"],"names":["React","Component","Button","EXAMPLES","ShoppingCart","constructor","props","render","console","log","sum","totalItem","states","forEach","element","quantity","price","map","imageLocation","imageName","name","toFixed","reset"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,SAASC,QAAT,QAAyB,qBAAzB;;AAGA,eAAe,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AAChDI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH,GAH+C,CAOhD;AACA;AACA;AAEA;;;AAEAC,EAAAA,MAAM,GAAG;AAELC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB,KAAKH,KAA7B;AACA,QAAII,GAAG,GAAG,CAAV;AACA,QAAIC,SAAS,GAAG,CAAhB;AACA,SAAKL,KAAL,CAAWM,MAAX,CAAkBC,OAAlB,CAA0BC,OAAO,IAAI;AACjCH,MAAAA,SAAS,GAAGG,OAAO,CAACC,QAAR,GAAmBD,OAAO,CAACE,KAAvC;AACAN,MAAAA,GAAG,GAAGA,GAAG,GAAGC,SAAZ;AACH,KAHD;AAKA,wBACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI;AAAA,0BAAK,KAAKL,KAAL,CAAWM,MAAX,CAAkBK,GAAlB,CAAuBH,OAAD,iBACvB;AAAA,oCAAG;AAAK,cAAA,GAAG,EAAEA,OAAO,CAACI,aAAlB;AAAiC,cAAA,MAAM,EAAC,IAAxC;AAA6C,cAAA,KAAK,EAAC;AAAnD;AAAA;AAAA;AAAA;AAAA,oBAAH,EAA+DJ,OAAO,CAACK,SAAvE,UAAsFL,OAAO,CAACC,QAA9F,UAA4GD,OAAO,CAACE,KAApH,SAA8HF,OAAO,CAACM,IAAtI;AAAA;AAAA;AAAA;AAAA;AAAA,kBADC,CAAL;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAOI;AAAA,oCAAeV,GAAG,CAACW,OAAJ,CAAY,CAAZ,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ,eAUI;AAAA,gCAAW,CAAE,OAAOX,GAAR,GAAeA,GAAhB,EAAqBW,OAArB,CAA6B,CAA7B,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAeI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKf,KAAL,CAAWgB,KAAX,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAqBH;;AA5C+C","sourcesContent":["import React, { Component } from 'react';\nimport { Button } from 'reactstrap';\nimport { EXAMPLES } from '../testData/example';\n\n\nexport default class ShoppingCart extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n\n\n    // --> loop through the items in states\n    // --> write a console.log test for each of the items in the array\n    // --> log the quantity value to make sure we're able to access it\n\n    // --> create a global variable to collect the quantity of each array\n\n    render() {\n\n        console.log(\"tesssss:\", this.props);\n        var sum = 0;\n        var totalItem = 1;\n        this.props.states.forEach(element => {\n            totalItem = element.quantity * element.price;\n            sum = sum + totalItem;\n        });\n\n        return (\n            <div className=\"text-center\">\n                <h1>Shopping Cart</h1>\n                <div >\n                    <p>Order</p>\n\n                    <p> {this.props.states.map((element) =>\n                        <p><img src={element.imageLocation} height=\"90\" width=\"100\" />{element.imageName}  X {element.quantity}  X {element.price} : {element.name}</p>)}\n                    </p>\n\n                    <p>Sub Total: {sum.toFixed(2)}</p>\n                    <p>Shipping Fee: $ 3.99</p>\n                    <p>Tax: 6% </p>\n                    <p>Total: {((0.06 * sum) + sum).toFixed(2)}</p>\n\n                </div>\n                <Button onClick={() => this.props.reset()}>Reset</Button>\n\n\n            </div>\n        );\n    }\n\n\n}"]},"metadata":{},"sourceType":"module"}