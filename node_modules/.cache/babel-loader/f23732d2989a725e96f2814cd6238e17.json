{"ast":null,"code":"var _jsxFileName = \"/Users/manojpun/Desktop/mariaspizza/src/components/ShoppingCart.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'reactstrap';\nimport './ShoppingCart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ShoppingCart extends Component {\n  constructor(props) {\n    super(props);\n  } // --> loop through the items in states\n  // --> write a console.log test for each of the items in the array\n  // --> log the quantity value to make sure we're able to access it\n  // --> create a global variable to collect the quantity of each array\n  // display() {\n  //     console.log(\"lion\",)\n  //     if (this.props.states.length = !0) {\n  //         return\n  //         {\n  //             <div><p> {this.props.states.map((element) =>\n  //                 <p><img src={element.imageLocation} height=\"90\" width=\"100\" />{element.imageName}  X {element.quantity}  X {element.price} : {element.name}</p>)}\n  //             </p>\n  //                 <p>Sub Total: {sum.toFixed(2)}</p>\n  //                 <p>Shipping Fee: $ 3.99</p>\n  //                 <p>Tax: 6% </p>\n  //                 <p>Total: {((0.06 * sum) + sum).toFixed(2)}</p>\n  //             </div>\n  //         }\n  //     }\n  //     else {\n  //         return <p>Empty</p>\n  //     }\n  // }\n\n\n  display() {\n    var sum = 0;\n    var totalItem = 1;\n    this.props.states.forEach(element => {\n      totalItem = element.quantity * element.price;\n      sum = sum + totalItem;\n    });\n\n    if (this.props.states.length !== 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Sub Total: \", sum.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Shipping Fee: $ 3.99\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Tax (6%) : \", (0.06 * sum).toFixed(2), \"  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total: \", (0.06 * sum + sum).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 20\n      }, this);\n    }\n  }\n\n  render() {\n    // create a function that \n    // we need to display the order items if the parent state is updated\n    // now the cart displays redundant information of tax and shipping prior to placing the order\n    // step1: create an if/else statement. if there is something in the state update the page with total. else return YOUR CART IS EMPTY\n    // STEP 2: \n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Shopping Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", this.props.states.map(element => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: element.imageLocation,\n              height: \"100\",\n              width: \"100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 28\n            }, this), element.imageName, \"  x \", element.quantity, \"  x \", element.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), this.display()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => this.props.reset(),\n        children: \"Clear My Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/manojpun/Desktop/mariaspizza/src/components/ShoppingCart.js"],"names":["React","Component","Button","ShoppingCart","constructor","props","display","sum","totalItem","states","forEach","element","quantity","price","length","toFixed","render","map","imageLocation","imageName","reset"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,OAAO,oBAAP;;AACA,eAAe,MAAMC,YAAN,SAA2BF,SAA3B,CAAqC;AAChDG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH,GAH+C,CAIhD;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;;;AACAC,EAAAA,OAAO,GAAG;AACN,QAAIC,GAAG,GAAG,CAAV;AACA,QAAIC,SAAS,GAAG,CAAhB;AACA,SAAKH,KAAL,CAAWI,MAAX,CAAkBC,OAAlB,CAA0BC,OAAO,IAAI;AACjCH,MAAAA,SAAS,GAAGG,OAAO,CAACC,QAAR,GAAmBD,OAAO,CAACE,KAAvC;AACAN,MAAAA,GAAG,GAAGA,GAAG,GAAGC,SAAZ;AACH,KAHD;;AAIA,QAAI,KAAKH,KAAL,CAAWI,MAAX,CAAkBK,MAAlB,KAA6B,CAAjC,EAAoC;AAChC,0BACI;AAAA,gCACI;AAAA,oCAAeP,GAAG,CAACQ,OAAJ,CAAY,CAAZ,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA,oCAAgB,CAAC,OAAOR,GAAR,EAAaQ,OAAb,CAAqB,CAArB,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA,gCAAW,CAAE,OAAOR,GAAR,GAAeA,GAAhB,EAAqBQ,OAArB,CAA6B,CAA7B,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAQH,KATD,MAUK;AACD,0BAAO;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;AACJ;;AACDC,EAAAA,MAAM,GAAG;AACL;AAEA;AACA;AACA;AACA;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,gCAEI;AAAA,0BAAK,KAAKX,KAAL,CAAWI,MAAX,CAAkBQ,GAAlB,CAAuBN,OAAD,iBACvB;AAAA,oCAAG;AAAK,cAAA,GAAG,EAAEA,OAAO,CAACO,aAAlB;AAAiC,cAAA,MAAM,EAAC,KAAxC;AAA8C,cAAA,KAAK,EAAC;AAApD;AAAA;AAAA;AAAA;AAAA,oBAAH,EAAgEP,OAAO,CAACQ,SAAxE,UAAuFR,OAAO,CAACC,QAA/F,UAA6GD,OAAO,CAACE,KAArH;AAAA;AAAA;AAAA;AAAA;AAAA,kBADC,CAAL;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAKK,KAAKP,OAAL,EALL;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eASI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKD,KAAL,CAAWe,KAAX,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAaH;;AAzE+C","sourcesContent":["import React, { Component } from 'react';\nimport { Button } from 'reactstrap';\nimport './ShoppingCart.css';\nexport default class ShoppingCart extends Component {\n    constructor(props) {\n        super(props);\n    }\n    // --> loop through the items in states\n    // --> write a console.log test for each of the items in the array\n    // --> log the quantity value to make sure we're able to access it\n\n    // --> create a global variable to collect the quantity of each array\n    // display() {\n    //     console.log(\"lion\",)\n    //     if (this.props.states.length = !0) {\n    //         return\n    //         {\n    //             <div><p> {this.props.states.map((element) =>\n    //                 <p><img src={element.imageLocation} height=\"90\" width=\"100\" />{element.imageName}  X {element.quantity}  X {element.price} : {element.name}</p>)}\n    //             </p>\n\n    //                 <p>Sub Total: {sum.toFixed(2)}</p>\n    //                 <p>Shipping Fee: $ 3.99</p>\n    //                 <p>Tax: 6% </p>\n    //                 <p>Total: {((0.06 * sum) + sum).toFixed(2)}</p>\n    //             </div>\n    //         }\n\n\n\n    //     }\n    //     else {\n    //         return <p>Empty</p>\n    //     }\n    // }\n    display() {\n        var sum = 0;\n        var totalItem = 1;\n        this.props.states.forEach(element => {\n            totalItem = element.quantity * element.price;\n            sum = sum + totalItem;\n        });\n        if (this.props.states.length !== 0) {\n            return (\n                <div>\n                    <p>Sub Total: {sum.toFixed(2)}</p>\n                    <p>Shipping Fee: $ 3.99</p>\n                    <p>Tax (6%) : {((0.06 * sum).toFixed(2))}  </p>\n                    <p>Total: {((0.06 * sum) + sum).toFixed(2)}</p>\n                </div>\n            )\n        }\n        else {\n            return <p></p>\n        }\n    }\n    render() {\n        // create a function that \n\n        // we need to display the order items if the parent state is updated\n        // now the cart displays redundant information of tax and shipping prior to placing the order\n        // step1: create an if/else statement. if there is something in the state update the page with total. else return YOUR CART IS EMPTY\n        // STEP 2: \n        return (\n            <div className=\"text-center\">\n                <h1>Shopping Cart</h1>\n                <div >\n                    {/* //  {this.display()} */}\n                    <p> {this.props.states.map((element) =>\n                        <p><img src={element.imageLocation} height=\"100\" width=\"100\" />{element.imageName}  x {element.quantity}  x {element.price}</p>)}\n                    </p>\n                    {this.display()}\n                </div>\n                <Button onClick={() => this.props.reset()}>Clear My Cart</Button>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}